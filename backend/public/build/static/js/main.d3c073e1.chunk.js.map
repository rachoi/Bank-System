{"version":3,"sources":["ProtectedRoute.js","Components/NavBar.js","Components/Home.js","Pages/HomePage.js","Components/SignIn.js","Pages/LoginPage.js","Components/SignUp.js","Pages/RegisterPage.js","Components/Datagrid.js","Components/UtilityForm.js","Components/Dashboard.js","Pages/DashboardPage.js","App.js","reportWebVitals.js","index.js"],"names":["ProtectedRoute","Component","component","rest","user","useState","isLoggedIn","setIsLoggedIn","loading","setLoading","mountedRef","useRef","useEffect","axios","get","then","res","data","catch","error","console","log","current","render","props","to","pathname","state","from","location","style","display","justifyContent","alignItems","CircularProgress","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","colors","background","color","padding","buttonDiv","linkDeco","textDecoration","url","ButtonAppBar","classes","React","className","AppBar","position","Toolbar","Typography","variant","Button","onClick","delete","success","history","push","body","height","flexContainer","marginBottom","innerContainer","margin","marginTop","fontSize","header","borderBottom","footerFlexContainer","flexDirection","currentFeatures","plannedFeatures","testUsers","Home","List","map","text","index","ListItemText","primary","HomePage","Copyright","align","Link","href","Date","getFullYear","paper","avatar","backgroundColor","palette","secondary","main","form","width","submit","SignIn","email","setEmail","password","setPassword","setError","Container","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","e","target","value","type","preventDefault","alert","post","auth","Grid","container","item","xs","Box","mt","Login","SignUp","firstName","setFirstName","lastName","setLastName","sm","balance","transactions","admin","Register","columns","field","headerName","DataGridDemo","rows","setRows","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","flexGrid","UtilityForm","setUser","utilityType","setUtilityType","depositValue","setDepositValue","withdrawValue","setWithdrawValue","transferValue","setTransferValue","note","setNoteValue","transferEmail","setTransferEmail","emailError","setEmailError","balanceError","setBalanceError","depositError","setDepositError","undefined","resetStates","formatToCurrency","amount","toFixed","replace","onChangeNoteValue","noteValue","isNaN","parseFloat","put","window","reload","foundEmail","deposits","filter","withdraws","transfers","drawerWidth","drawer","breakpoints","up","flexShrink","appBar","marginLeft","toolbar","mixins","drawerPaper","content","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","Divider","ListItem","button","ListItemIcon","document","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","xsDown","DashboardPage","Dashboard","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3c073e1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst url = 'https://banking-system-rc.herokuapp.com';\r\n// const url = 'http://localhost:3000';\r\n// const url = 'http://localhost:5000';\r\n\r\nexport const ProtectedRoute = ({ component: Component, user, ...rest}) =>{\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const mountedRef = useRef(true);\r\n\r\n    useEffect( () => {\r\n        // Attempting a get request/getting authenticated user \r\n       axios.get(`${url}/auth/user`).then(res => {\r\n            if(res.data) {\r\n                // console.log(\"Authentication verified\");\r\n                setIsLoggedIn(true);\r\n                setLoading(true);\r\n            }\r\n            else{\r\n                // console.log(\"Not authenticated, no response\");\r\n            }\r\n            \r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n            setLoading(true);\r\n        });\r\n\r\n\r\n        return () => {\r\n            mountedRef.current = false\r\n        }\r\n\r\n    }, []); \r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n               loading ? <div> \r\n                   <Route {...rest} render={ (props) => {\r\n                        if(isLoggedIn === true) {\r\n                            return <Component {...rest} {...props}/>\r\n                        }\r\n                        else{\r\n                            return <Redirect to={\r\n                                {\r\n                                    pathname: \"/\",\r\n                                    state: {\r\n                                        from: props.location\r\n                                    }\r\n                                }\r\n                            } />\r\n                        }    \r\n                    }\r\n                        \r\n                    }/>\r\n                </div> : \r\n                <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}> \r\n                    <CircularProgress/> \r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  colors: {\r\n    background: 'white',\r\n    color: '#333333',\r\n    padding: '0 30px',\r\n    // boxShadow: 'none'\r\n  },\r\n  buttonDiv: {\r\n    padding: '5px'\r\n  },\r\n  linkDeco: {\r\n    textDecoration: \"none\",\r\n    color: '#333333',\r\n  },\r\n}));\r\n\r\nconst url = 'https://banking-system-rc.herokuapp.com';\r\n// const url = 'http://localhost:3000';\r\n// const url = 'http://localhost:5000';\r\n\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(props);\r\n\r\n  useEffect( () => {\r\n      setIsLoggedIn(props);\r\n    }, [props])\r\n\r\n   const logOut = () => {\r\n    axios.delete(`${url}/logout`)\r\n    .then( res =>{\r\n      if(res.data.success === true) {\r\n        props.history.push(url);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n   \r\n    \r\n\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* colors for the AppBar passed by className, this overrides the MuiAppBar-colorPrimary property*/}\r\n      <AppBar position=\"static\" className={classes.colors}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {/* <Link className={classes.linkDeco} to={\"/\"}> \r\n                \r\n              </Link> */}\r\n              Banking System\r\n            </Typography>\r\n            \r\n            {/* if isLoggedIn is true, show log out, else show login */}\r\n\r\n            {isLoggedIn.isLoggedIn ? \r\n            (\r\n              <div className={classes.buttonDiv}>\r\n              <Button color=\"inherit\" onClick={logOut}>Logout</Button>\r\n              </div>\r\n            ) : ( \r\n              <Link className={classes.linkDeco} to={\"/user/login\"} > \r\n                <Button color=\"inherit\">Login</Button>\r\n              </Link>\r\n            )}\r\n          </Toolbar>\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NavBar from \"./NavBar.js\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: '969px'\r\n  },\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    marginBottom: \"45px\"\r\n  },\r\n  innerContainer: {\r\n    color: '#333333',\r\n    margin: 'auto',\r\n    marginTop: \"10px\",\r\n    fontSize: '1.5rem'\r\n  }, \r\n  header: {\r\n    color: '#333333',\r\n    margin: '25px', \r\n    borderBottom: \"solid 2px #333333\",\r\n  },\r\n  footerFlexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    flexDirection: \"column\"\r\n  }\r\n}))\r\n\r\nconst currentFeatures = \r\n[\r\n  \"Register new users\",\r\n  \"Login and log out capabilities\",\r\n  \"User actions (deposit, withdraw, transfer money)\",\r\n  \"Display for current user's transaction history\",\r\n  \"Protected routing for routes that need authentication (user dashboard)\",\r\n]\r\n\r\n\r\nconst plannedFeatures = [\r\n  \"Protected routing for routes that do not need authentication (home, login/register)\",\r\n  \"Roles for each user - (ie, admin, normal user)\",\r\n  \"User deletion capabilities for admins\",\r\n  \"Request money from other users (?)\"\r\n]\r\n\r\nconst testUsers = [\r\n  \"test1\",\r\n  \"test2\"\r\n]\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect( () => {\r\n    setLoading(true);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        loading === true ? \r\n        <div className={classes.body}>\r\n          <NavBar isLoggedIn={false}/> \r\n          <div className={classes.flexContainer}> \r\n            <Typography variant=\"h4\" className={classes.header}>\r\n              Banking System Features\r\n            </Typography>\r\n          </div>\r\n          \r\n          <div className={classes.flexContainer}>\r\n              <div className={classes.innerContainer}> \r\n                <Typography variant=\"h5\" >\r\n                  Current features:\r\n                </Typography>\r\n                <List>\r\n                    {currentFeatures.map((text, index) => (\r\n                        <ListItem key={index}>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>  \r\n                    ))}\r\n                </List>\r\n              </div>\r\n              <div className={classes.innerContainer}> \r\n                <Typography variant=\"h5\" >\r\n                  Planned features:\r\n                </Typography>\r\n                <List>\r\n                    {plannedFeatures.map((text, index) => (\r\n                        <ListItem key={index}>\r\n                            <ListItemText primary={text} />\r\n                        </ListItem>  \r\n                    ))}\r\n                </List>\r\n              </div>\r\n          </div>\r\n          <footer className={classes.footerFlexContainer}> \r\n            <Typography>\r\n              Note: You can test user functions by registering a new account or by using existing test accounts.\r\n            </Typography>\r\n            <Typography>\r\n              For demonstration purposes, email validation for registration has been removed.\r\n            </Typography>\r\n            <Typography>\r\n              Current test users (email and password are the same):\r\n              <List className={classes.footerFlexContainer}>\r\n                {testUsers.map((text, index) => (\r\n                    <ListItem key={index}>\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>  \r\n                ))}\r\n              </List>\r\n            </Typography>\r\n          </footer>\r\n        </div>\r\n        \r\n      \r\n        : <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}> <CircularProgress/> </div>\r\n      } \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Home;","import axios from 'axios';\r\nimport React, {useEffect} from 'react';\r\nimport Home from \"../Components/Home.js\";\r\n\r\nconst HomePage = (props) => {\r\n    const url = 'https://banking-system-rc.herokuapp.com';\r\n    // const url = 'http://localhost:3000';\r\n    // const url = 'http://localhost:5000';\r\n  \r\n    useEffect( () => {\r\n      //if trying to access home page and we find a user, redirect back to dashboard\r\n      axios.get(`${url}/auth/user`)\r\n      .then(res => {\r\n        if(res.data) {\r\n            props.history.push(\"/dashboard\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n      \r\n    }, [props.history]); //empty array at the end makes it only run on mount and unmount \r\n  \r\n    return (\r\n      <div> \r\n        <Home/>\r\n      </div> \r\n    );\r\n  }\r\n  \r\n  export default HomePage;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport axios from \"axios\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Banking System\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst url = 'https://banking-system-rc.herokuapp.com';\r\n// const url = \"http://localhost:3000\";\r\n// const url = 'http://localhost:5000';\r\n\r\nexport default function SignIn(props) {\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [error, setError] = React.useState(\"\");\r\n\r\n  // const clearInputs = () => {\r\n  //   setEmail('');\r\n  //   setPassword('');\r\n  // }\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const signInOnClick = (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    let data = {\r\n      email: email, \r\n      password: password, \r\n    }\r\n\r\n    if(data.email === '' || data.password === '') {\r\n      alert('Missng input values');\r\n    }\r\n    else{\r\n      // Attempting login to ${data.email}\r\n\r\n      axios.post(`${url}/login`, data)\r\n      .then(res=>{\r\n\r\n        if(res.data.auth === true){\r\n          // Updating verfications and redirecting to dashboard\r\n          \r\n          props.history.push(\"/dashboard\"); //redirect to dashboard, then have protected routes always check for auth\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(\"Username or password did not match\");\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n\r\n        <Typography component=\"h1\" variant=\"h6\">\r\n          {error}\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            onChange={onChangeEmail}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={onChangePassword}\r\n          />\r\n          <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={signInOnClick}\r\n            >\r\n              Sign In\r\n          </Button>\r\n          \r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link variant=\"body2\" href=\"/user/register\">\r\n                Don't have an account? Sign Up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport NavBar from \"../Components/NavBar.js\";\r\nimport SignIn from \"../Components/SignIn.js\";\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div> \r\n        { \r\n          <div className=\"page\">\r\n            <NavBar isLoggedIn={false}/>\r\n          </div>  \r\n        }\r\n      </div> \r\n      <SignIn {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst url = 'https://banking-system-rc.herokuapp.com';\r\n// const url = \"http://localhost:3000\";\r\n// const url = 'http://localhost:5000';\r\n\r\nexport default function SignUp(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [firstName, setFirstName] = React.useState(\"\");\r\n  const [lastName, setLastName] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [error, setError] = React.useState(\"\");\r\n\r\n  // const clearInputs = () => {\r\n  //   setEmail('');\r\n  //   setFirstName('');\r\n  //   setLastName('');\r\n  //   setPassword('');\r\n  // }\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  const onChangeFirstName = (e) => {\r\n    const firstName = e.target.value;\r\n    setFirstName(firstName);\r\n  };\r\n\r\n  const onChangeLastName = (e) => {\r\n    const lastName = e.target.value;\r\n    setLastName(lastName);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  function signUpOnClick(e) {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    let data = {\r\n      email: email, \r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      password: password, \r\n      balance: 0.00,\r\n      transactions: [],\r\n      admin: false,\r\n    }\r\n\r\n    if(data.email === '' || data.firstName === '' || data.lastName === '' || data.password === '') {\r\n      alert('Missng input values');\r\n    }\r\n    else{\r\n    \r\n      axios.post(`${url}/register`, data)\r\n      .then(res => {\r\n        // console.log(res.data);\r\n        if(res.data.success === true) {\r\n          props.history.push(\"/user/login\");\r\n        }\r\n        else{\r\n          console.log(\"Registration failed\");\r\n          setError(\"Email already in use, please use a different email to register\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n\r\n        <Typography component=\"h1\" variant=\"h6\">\r\n          {error}\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                onChange={onChangeFirstName}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={onChangeLastName}\r\n                \r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={onChangeEmail}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={onChangePassword}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={signUpOnClick}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/user/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport NavBar from \"../Components/NavBar.js\";\r\nimport SignUp from \"../Components/SignUp.js\";\r\n\r\nconst Register = (props) => {\r\n\r\n  const user = undefined;\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div> \r\n        { \r\n          user ? ( <Redirect to=\"/\" /> ) : (<div className=\"page\">\r\n          <NavBar isLoggedIn={false}/>\r\n          </div>  )\r\n        }\r\n      </div> \r\n      <SignUp {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;","import React, {useEffect} from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'Id', width:90 },\r\n  {\r\n    field: 'type',\r\n    headerName: 'Type',\r\n    width: 150,\r\n  },\r\n  {\r\n    field: 'date',\r\n    headerName: 'Date',\r\n    width: 110,\r\n  },\r\n  {\r\n    field: 'from',\r\n    headerName: 'From',\r\n    width: 150,\r\n  },\r\n  {\r\n    field: 'to',\r\n    headerName: 'To',\r\n    width: 110,\r\n  },\r\n  \r\n  {\r\n    field: 'note',\r\n    headerName: 'Note',\r\n    width: 200,\r\n  },\r\n  {\r\n    field: 'amount',\r\n    headerName: 'Amount',\r\n    type: 'number',\r\n    width: 150,\r\n  },\r\n//   {\r\n//     field: 'fullName',\r\n//     headerName: 'Full name',\r\n//     description: 'This column has a value getter and is not sortable.',\r\n//     sortable: false,\r\n//     width: 160,\r\n//     valueGetter: (params) =>\r\n//       `${params.getValue(params.id, 'firstName') || ''} ${\r\n//         params.getValue(params.id, 'lastName') || ''\r\n//       }`,\r\n//   },\r\n];\r\n\r\n\r\nexport default function DataGridDemo(props) {\r\n\r\n  const [rows, setRows] = React.useState(props.rows);\r\n\r\n  useEffect( () => {\r\n    setRows(props.rows);\r\n  }, [props.rows])\r\n\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={5}\r\n        rowsPerPageOptions={[5]}\r\n        checkboxSelection\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n  );\r\n}","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Datagrid from './Datagrid';\r\n// import validator from 'validator';\r\n\r\nimport axios from 'axios';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    flexContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        maxWidth: '500px'\r\n    },\r\n    flexGrid: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    }\r\n\r\n\r\n}));\r\n\r\nconst url = 'https://banking-system-rc.herokuapp.com';\r\n// const url = 'http://localhost:3000';\r\n// const url = 'http://localhost:5000';\r\n\r\n//deposit, transfer, withdraw\r\nexport default function UtilityForm(props) {\r\n    const classes = useStyles();\r\n\r\n    const [user, setUser] = React.useState(props.user);\r\n    const [utilityType, setUtilityType] = React.useState(props.utilityType);\r\n\r\n    const [depositValue, setDepositValue] = React.useState(\"\");\r\n    const [withdrawValue, setWithdrawValue] = React.useState(\"\");\r\n    const [transferValue, setTransferValue] = React.useState(\"\");\r\n    const [note, setNoteValue] = React.useState(\"\");\r\n\r\n    const [transferEmail, setTransferEmail] = React.useState(\"\");\r\n\r\n    const [emailError, setEmailError] = React.useState(\"\");\r\n    const [balanceError, setBalanceError] = React.useState(\"\");\r\n    const [depositError, setDepositError] = React.useState(\"\");\r\n\r\n    useEffect( () => {\r\n        setUser(props.user);\r\n        //setting default to summary page\r\n        if(props.user.balance !== undefined && props.utilityType !== \"summary\" && props.utilityType !== \"deposit\" && props.utilityType !== \"withdraw\" && props.utilityType !== \"transfer\")\r\n        {\r\n            setUtilityType(\"summary\");\r\n        }\r\n        else{\r\n            setUtilityType(props.utilityType);\r\n        }\r\n        resetStates();\r\n    }, [props.user, props.utilityType, utilityType])\r\n\r\n    const resetStates = () => {\r\n        setDepositValue(\"\");\r\n        setWithdrawValue(\"\");\r\n        setTransferValue(\"\");\r\n        setNoteValue(\"\");\r\n        setTransferEmail(\"\");\r\n        setEmailError(\"\");\r\n        setBalanceError(\"\");\r\n        setDepositError(\"\");\r\n    }\r\n\r\n    const formatToCurrency = amount => {\r\n        return amount.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&\");\r\n    };\r\n\r\n    const handleTransfer = (e) => {\r\n        e.preventDefault();\r\n\r\n        //specific cases\r\n        setBalanceError(\"\");\r\n        setEmailError(\"\");\r\n        setDepositError(\"\");\r\n\r\n        if(isNaN(transferValue) === true || transferEmail === \"\") {\r\n\r\n            alert('Invalid transfer inputs')\r\n        }\r\n        else{\r\n\r\n            let amount = parseFloat(transferValue);\r\n            if(amount > 100000) {\r\n                setDepositError(\"Amount exceeds $100,000 - enter something smaller\")\r\n            }\r\n            else {\r\n                let data = {\r\n                    to: transferEmail,\r\n                    amount: formatToCurrency(amount),\r\n                    note: note\r\n                }\r\n    \r\n                // Attempting to transfer ${data.amount} to ${data.to}'s account\r\n                axios.put(`${url}/transfer`, data)\r\n                .then(res=> {\r\n    \r\n                    if(res.data.foundEmail === false) {\r\n                        // Transfer email does not exist\r\n                        setEmailError(\"Email you are trying to transfer to does not exist\");\r\n                    }\r\n                    else if(res.data.balanceError === true) {\r\n                        // Attempting to transfer more money than balance\r\n                        setBalanceError(\"Insufficient amount\");\r\n                    }\r\n                    else if(res.data.depositError === true) {\r\n                        // Trying to deposit negative value\r\n                        setDepositError(\"Invalid deposit value\");\r\n                    }\r\n                    else{\r\n                        setEmailError(\"\");\r\n                        setBalanceError(\"\");\r\n                        setUtilityType(\"summary\");\r\n                        window.location.reload(false);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            }\r\n            \r\n            /* if(validator.isEmail(transferEmail)) {\r\n                setEmailError('Valid Email');\r\n                \r\n\r\n            } else {\r\n                setEmailError('Enter valid Email!');\r\n            } */\r\n        }\r\n    }\r\n    \r\n    const handleDeposit = (e) => {\r\n        e.preventDefault();\r\n      \r\n        //specific cases\r\n        setBalanceError(\"\");\r\n        setDepositError(\"\");\r\n\r\n        if(isNaN(depositValue) === true) {\r\n            alert('Invalid deposit value input');\r\n        }\r\n        else{\r\n\r\n            let amount = parseFloat(depositValue);\r\n            if(amount > 100000) {\r\n                setDepositError(\"Amount exceeds $100,000 - enter something smaller\")\r\n            }\r\n            else {\r\n                let data = {\r\n                    amount: formatToCurrency(amount),\r\n                    note: note\r\n                }\r\n        \r\n                // Attempting to deposit ${data.amount} to user's account\r\n                axios.put(`${url}/deposit`, data)\r\n                .then(res=> {\r\n                    if(res.data.depositError === true) {\r\n                        // Trying to deposit negative value\r\n                        setDepositError(\"Invalid deposit value\");\r\n                    }\r\n                    else{\r\n                        // setUtilityType(\"summary\");\r\n                        window.location.reload(false);\r\n                    }\r\n                    \r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    const handleWithdraw = (e) => {\r\n        e.preventDefault();\r\n\r\n        //specific cases\r\n        setBalanceError(\"\");\r\n        setDepositError(\"\");\r\n      \r\n        if(isNaN(withdrawValue) === true) {\r\n            alert('Invalid withdraw value input');\r\n        }\r\n        else{\r\n\r\n            let amount = parseFloat(withdrawValue);\r\n            if(amount > 100000) {\r\n                setDepositError(\"Amount exceeds $100,000 - enter something smaller\")\r\n            }\r\n            else {\r\n                let data = {\r\n                    amount: formatToCurrency(amount),\r\n                    note: note\r\n                }\r\n        \r\n                // Attempting to withdraw ${data.amount} to user's account\r\n                axios.put(`${url}/withdraw`, data)\r\n                .then(res=> {\r\n                    if(res.data.balanceError === true) {\r\n                        // Attempting to transfer more money than balance\r\n                        setBalanceError(\"Insufficient amount\");\r\n                    }\r\n                    else if(res.data.depositError === true) {\r\n                        // Trying to deposit negative value\r\n                        setDepositError(\"Invalid deposit value\");\r\n                    }\r\n                    else{\r\n                        setDepositError(\"\");\r\n                        setBalanceError(\"\");\r\n                        // setUtilityType(\"summary\");\r\n                        window.location.reload(false);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error);\r\n                })\r\n            }\r\n            \r\n        }\r\n    }\r\n    \r\n    const onChangeTransferValue = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const transferValue = e.target.value;\r\n        setTransferValue(transferValue);\r\n    }\r\n\r\n    const onChangeTransferEmail = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const transferEmail = e.target.value;\r\n        setTransferEmail(transferEmail);\r\n    }\r\n\r\n    const onChangeDepositValue = (e) => {\r\n        e.preventDefault();\r\n        const depositValue = e.target.value;\r\n        setDepositValue(depositValue);\r\n    }\r\n\r\n    const onChangeWithdrawValue = (e) => {\r\n        e.preventDefault();\r\n\r\n        const withdrawValue = e.target.value;\r\n        setWithdrawValue(withdrawValue);\r\n\r\n    }\r\n\r\n    const onChangeNoteValue = (e) => {\r\n        e.preventDefault();\r\n\r\n        const noteValue = e.target.value;\r\n        setNoteValue(noteValue);\r\n    }\r\n\r\n    if(utilityType === \"deposit\") {\r\n        return (\r\n            <div className={classes.flexContainer}> \r\n                <Typography variant=\"h6\">\r\n                    Deposit\r\n                </Typography>\r\n                <Typography>\r\n                    Amount you want to deposit in USD (max $100,000)\r\n                </Typography>\r\n                <Typography>\r\n                    {depositError}\r\n                </Typography>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"amount\"\r\n                label=\"Amount\"\r\n                type=\"amount\"\r\n                id=\"depo-amount\"\r\n                value={depositValue}\r\n                onChange={onChangeDepositValue}\r\n                />\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                name=\"note\"\r\n                label=\"Note\"\r\n                type=\"note\"\r\n                id=\"depo-note\"\r\n                value={note}\r\n                onChange={onChangeNoteValue}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={handleDeposit}\r\n                >\r\n                    Deposit\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n    else if(utilityType === \"transfer\") {\r\n        return (\r\n            <div className={classes.flexContainer}> \r\n                <Typography variant=\"h6\">\r\n                    Transfer\r\n                </Typography>\r\n                <Typography>\r\n                    Enter the email information of the \r\n                    person you are transfering to\r\n                </Typography>\r\n                <Typography>\r\n                    {emailError}\r\n                </Typography>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                id=\"trans-email\"\r\n                value={transferEmail}\r\n                onChange={onChangeTransferEmail}\r\n                />\r\n                <Typography>\r\n                    Amount you want to transfer in USD (max $100,000)\r\n                </Typography>\r\n                <Typography>\r\n                    {balanceError}\r\n                </Typography>\r\n                <Typography>\r\n                    {depositError}\r\n                </Typography>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"amount\"\r\n                label=\"Amount\"\r\n                type=\"amount\"\r\n                id=\"trans-amount\"\r\n                value={transferValue}\r\n                onChange={onChangeTransferValue}\r\n                />\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                name=\"note\"\r\n                label=\"Note\"\r\n                type=\"note\"\r\n                id=\"trans-note\"\r\n                value={note}\r\n                onChange={onChangeNoteValue}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={handleTransfer}\r\n                >\r\n                    Transfer\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n    else if(utilityType === \"withdraw\") {\r\n        return (\r\n            <div className={classes.flexContainer}> \r\n                <Typography variant=\"h6\">\r\n                    Withdraw\r\n                </Typography>\r\n                <Typography>\r\n                    Amount you want to withdraw in USD (max $100,000)\r\n                </Typography>\r\n                <Typography>\r\n                    {balanceError}\r\n                </Typography>\r\n                <Typography>\r\n                    {depositError}\r\n                </Typography>\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"amount\"\r\n                label=\"Amount\"\r\n                type=\"amount\"\r\n                id=\"trans-amount\"\r\n                value={withdrawValue}\r\n                onChange={onChangeWithdrawValue}\r\n                />\r\n                <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                name=\"note\"\r\n                label=\"Note\"\r\n                type=\"note\"\r\n                id=\"note\"\r\n                value={note}\r\n                onChange={onChangeNoteValue}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={handleWithdraw}\r\n                >\r\n                    Withdraw\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n    else if(utilityType === \"summary\"){\r\n        let deposits = user.transactions.filter(transactions => transactions.type === 'Deposit');\r\n        let withdraws = user.transactions.filter(transactions => transactions.type === 'Withdraw');\r\n        let transfers = user.transactions.filter(transactions => transactions.type === 'Transfer');\r\n        return (\r\n            <div className={classes.flexGrid}>\r\n                {/* <List>\r\n                    {user.transactions.map((text, index) => (\r\n                        <ListItem key={index}>\r\n                            <ListItemText primary={JSON.stringify(text)} />\r\n                        </ListItem>  \r\n                    ))}\r\n                </List> */}\r\n                <Typography>\r\n                    Transfers\r\n                </Typography>\r\n                <Datagrid rows={transfers}/>\r\n\r\n                <Typography>\r\n                    Deposits\r\n                </Typography>\r\n                <Datagrid rows={deposits}/>\r\n\r\n                <Typography>\r\n                    Withdraws\r\n                </Typography>\r\n                <Datagrid rows={withdraws}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className={classes.flexContainer}> \r\n                \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}","import React, {useEffect} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n// import IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport Navbar from './NavBar';\r\nimport UtilityForm from './UtilityForm';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n    background: 'white',\r\n    color: '#333333',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [user, setUser] = React.useState(props);\r\n  const [utilityType, setUtilityType] = React.useState(\"\");\r\n\r\n  useEffect( () => {\r\n    setUser(props.user);\r\n  }, [props.user])  \r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleUtilitySummary = (e) =>{\r\n    e.preventDefault();\r\n    // console.log(\"Setting utility to: Summary\");\r\n    setUtilityType(\"summary\");\r\n  }\r\n\r\n  const handleUtilityTransfer = (e) =>{\r\n    e.preventDefault();\r\n    // console.log(\"Setting utility to: Transfer\");\r\n    setUtilityType(\"transfer\");\r\n  }\r\n\r\n  const handleUtilityDeposit = (e) =>{\r\n    e.preventDefault();\r\n    // console.log(\"Setting utility to: Deposit\");\r\n    setUtilityType(\"deposit\");\r\n  }\r\n\r\n  const handleUtilityWithdraw = (e) =>{\r\n    e.preventDefault();\r\n    // console.log(\"Setting utility to: Withdraw\");\r\n    setUtilityType(\"withdraw\");\r\n  }\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n        {/* <List>\r\n          {['Summary', 'Transfer', 'Deposit', 'Withdraw'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText onClick={handleUtilityChange} primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List> */}\r\n        <List>\r\n            <ListItem button key={\"Summary\"}>\r\n              <ListItemIcon> <AccountBalanceIcon /> </ListItemIcon>\r\n              <ListItemText onClick={handleUtilitySummary} primary={\"Summary\"} />\r\n            </ListItem>\r\n\r\n            <ListItem button key={\"Transfer\"}>\r\n              <ListItemIcon> <MailIcon /> </ListItemIcon>\r\n              <ListItemText onClick={handleUtilityTransfer} primary={\"Transfer\"} />\r\n            </ListItem>\r\n\r\n            <ListItem button key={\"Deposit\"}>\r\n              <ListItemIcon> <InboxIcon /> </ListItemIcon>\r\n              <ListItemText onClick={handleUtilityDeposit} primary={\"Deposit\"} />\r\n            </ListItem>\r\n\r\n            <ListItem button key={\"Withdraw\"}>\r\n              <ListItemIcon> <PaymentIcon /> </ListItemIcon>\r\n              <ListItemText onClick={handleUtilityWithdraw} primary={\"Withdraw\"} />\r\n            </ListItem>\r\n        </List>\r\n      <Divider />\r\n      {/* <List>\r\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n          <ListItem button key={text}>\r\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n          </ListItem>\r\n        ))}\r\n      </List> */}\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Navbar {...props} isLoggedIn={true}/>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography variant=\"h4\">\r\n            Welcome back, {user.firstName} \r\n        </Typography>\r\n        <Typography variant=\"subtitle1\">\r\n          Balance: ${user.balance} USD\r\n        </Typography>\r\n        <div>\r\n          <UtilityForm {...props} user={user} utilityType={utilityType}/>\r\n        </div>  \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResponsiveDrawer;\r\n","import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport Dashboard from \"../Components/Dashboard.js\";\r\n\r\n//props needed for pages that require redirection with push\r\nconst DashboardPage = (props) => {\r\n  const [user, setUser] = useState({});\r\n\r\n  const url = 'https://banking-system-rc.herokuapp.com';\r\n  // const url = 'http://localhost:3000';\r\n  // const url = 'http://localhost:5000';\r\n\r\n  useEffect( () => {\r\n    // Making a get request for dashboard (getting user data)\r\n\r\n    //only runs when authenticated because server is checking for auth before it allows request to be made\r\n    axios.get(`${url}/auth/user`)\r\n    .then(res => {\r\n      if(res.data) {\r\n        // User received, authenticated\r\n        setUser(res.data);\r\n      }\r\n      else{\r\n        // No user found\r\n        props.history.push(\"/\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n    \r\n  }, [props.history]); //empty array at the end makes it only run on mount and unmount \r\n\r\n  return (\r\n    <div> \r\n      {/* When rendered we are logged in, \r\n      and we pass down user retrieved from our get request */}\r\n      <Dashboard {...props} user={user}/>\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default DashboardPage;","import React from \"react\";\nimport './App.css';\n\nimport { BrowserRouter as Router, \n  Route, \n  Switch,  \n  Redirect \n} from \"react-router-dom\";\n\nimport {ProtectedRoute} from './ProtectedRoute';\n\n\n//Pages\nimport HomePage from \"./Pages/HomePage\";\nimport Login from \"./Pages/LoginPage\";\nimport Register from \"./Pages/RegisterPage\";\nimport DashboardPage from \"./Pages/DashboardPage.js\";\n\nfunction App() {\n\n \n  \n  return (\n    <div> \n      <Router> \n          <Switch> \n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/user/login\" component={Login} />\n            <Route exact path=\"/user/register\" component={Register} />\n            <ProtectedRoute exact path=\"/dashboard\" component={DashboardPage} />\n            <Redirect to=\"/\"/>\n          </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}